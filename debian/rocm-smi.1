.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.5.
.\" I did it, anyway.

.TH ROC-SMI "1" "2022-01-30" "rocm-smi 1.4.1" "User Commands"
.\" -----------------------------------------------------------------
.\" This is a mix of :
.\"   - help2man --version-string=1.4.1 rocm-smi > rocm-smi.1
.\"   - ronn -roff README.md > rocm-smi.1.2
.\"   - manual glue to merge the above files...
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
rocm-smi - a tool to monitor AMD accelerators and GPUs

.SH SYNOPSIS
\fBroc\-smi\fR [\fB\-h\fR] [\fB\-d\fR \fIDEVICE\fR [\fIDEVICE\fR ...]] [\fB\-\-alldevices\fR] [\fB\-\-showhw\fR] [\fB\-a\fR] [\fB\-i\fR] [\fB\-v\fR] [\fB\-e\fR [\fIEVENT\fR ...]]
.IP
[\fB\-\-showdriverversion\fR] [\fB\-\-showfwinfo\fR [\fIBLOCK\fR ...]] [\fB\-\-showmclkrange\fR] [\fB\-\-showmemvendor\fR] [\fB\-\-showsclkrange\fR]
[\fB\-\-showproductname\fR] [\fB\-\-showserial\fR] [\fB\-\-showuniqueid\fR] [\fB\-\-showvoltagerange\fR] [\fB\-\-showbus\fR] [\fB\-\-showpagesinfo\fR]
[\fB\-\-showpendingpages\fR] [\fB\-\-showretiredpages\fR] [\fB\-\-showunreservablepages\fR] [\fB\-f\fR] [\fB\-P\fR] [\fB\-t\fR] [\fB\-u\fR] [\fB\-\-showmemuse\fR]
[\fB\-\-showvoltage\fR] [\fB\-b\fR] [\fB\-c\fR] [\fB\-g\fR] [\fB\-l\fR] [\fB\-M\fR] [\fB\-m\fR] [\fB\-o\fR] [\fB\-p\fR] [\fB\-S\fR] [\fB\-s\fR] [\fB\-\-showmeminfo\fR \fITYPE\fR [\fITYPE\fR ...]]
[\fB\-\-showpids\fR] [\fB\-\-showpidgpus\fR [\fISHOWPIDGPUS\fR ...]] [\fB\-\-showreplaycount\fR] [\fB\-\-showrasinfo\fR [\fISHOWRASINFO\fR ...]]
[\fB\-\-showvc\fR] [\fB\-\-showxgmierr\fR] [\fB\-\-showtopo\fR] [\fB\-\-showtopoweight\fR] [\fB\-\-showtopohops\fR] [\fB\-\-showtopotype\fR]
[\fB\-\-showtoponuma\fR] [\fB\-\-showenergycounter\fR] [\fB\-r\fR] [\fB\-\-resetfans\fR] [\fB\-\-resetprofile\fR] [\fB\-\-resetpoweroverdrive\fR]
[\fB\-\-resetxgmierr\fR] [\fB\-\-resetperfdeterminism\fR] [\fB\-\-setclock\fR \fILEVEL\fR \fILEVEL\fR] [\fB\-\-setsclk\fR \fILEVEL\fR [\fILEVEL\fR ...]]
[\fB\-\-setmclk\fR \fILEVEL\fR [\fILEVEL\fR ...]] [\fB\-\-setpcie\fR \fILEVEL\fR [\fILEVEL\fR ...]] [\fB\-\-setslevel\fR \fISCLKLEVEL\fR \fISCLK\fR \fISVOLT\fR]
[\fB\-\-setmlevel\fR \fIMCLKLEVEL\fR \fIMCLK\fR \fIMVOLT\fR] [\fB\-\-setvc\fR \fIPOINT\fR \fISCLK\fR SVOLT] [\fB\-\-setsrange\fR \fISCLKMIN\fR \fISCLKMAX\fR]
[\fB\-\-setmrange\fR \fIMCLKMIN\fR \fIMCLKMAX\fR] [\fB\-\-setfan\fR \fILEVEL\fR] [\fB\-\-setperflevel\fR \fILEVEL\fR] [\fB\-\-setoverdrive\fR %]
[\fB\-\-setmemoverdrive\fR %] [\fB\-\-setpoweroverdrive\fR \fIWATTS\fR] [\fB\-\-setprofile\fR \fISETPROFILE\fR] [\fB\-\-setperfdeterminism\fR \fISCLK\fR]
[\fB\-\-rasenable\fR \fIBLOCK\fR \fIERRTYPE\fR] [\fB\-\-rasdisable\fR \fIBLOCK\fR \fIERRTYPE\fR] [\fB\-\-rasinject\fR \fIBLOCK\fR] [\fB\-\-gpureset\fR]
[\fB\-\-load\fR \fIFILE\fR |\fB\-\-save\fR \fIFILE\fR] [\fB\-\-autorespond\fR \fIRESPONSE\fR] [\fB\-\-loglevel\fR \fILEVEL\fR] [\fB\-\-json\fR] [\fB\-\-csv\fR]
.PP

.SH DESCRIPTION
Radeon Open Compute Platform (ROCm) \- System Management Interface (SMI) \- Command Line Interface (CLI)\.

rocm-smi is the python reference implementation of a CLI, from AMD, over its C system management library. 

This tool acts as a command line interface for manipulating and monitoring the amdgpu kernel, and is intended to replace and deprecate the existing rocm_smi\.py CLI tool\. It uses Ctypes to call the rocm_smi_lib API\. Recommended: At least one AMD GPU with ROCm driver installed Required: ROCm SMI library installed (librocm_smi64).

.SH OPTIONS
.SS "Main:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-gpureset\fR
Reset specified GPU (One GPU must be specified). This flag will attempt to reset the GPU for a specified device\. This will invoke the GPU reset through the kernel debugfs file amdgpu_gpu_recover\. Note that GPU reset will not always work, depending on the manner in which the GPU is hung\.
.TP
\fB\-\-load\fR \fIFILE\fR
Load Clock, Fan, Performance and Profile settings from FILE
.TP
\fB\-\-save\fR \fIFILE\fR
Save Clock, Fan, Performance and Profile settings to FILE
.TP
\fB\-d\fR \fIDEVICE\fR [\fIDEVICE\fR ...], \fB\-\-device\fR \fIDEVICE\fR [\fIDEVICE\fR ...]
Execute command on specified device
.SS "Display Options:"
.HP
\fB\-\-alldevices\fR
.TP
\fB\-\-showhw\fR
Show Hardware details
.TP
\fB\-a\fR, \fB\-\-showallinfo\fR
Show Temperature, Fan and Clock values
.SS "Topology:"
.TP
\fB\-i\fR, \fB\-\-showid\fR
Show GPU ID
.TP
\fB\-v\fR, \fB\-\-showvbios\fR
Show VBIOS version
.TP
\fB\-e\fR [\fIEVENT\fR ...], \fB\-\-showevents\fR [\fIEVENT\fR ...]
Show event list
.TP
\fB\-\-showdriverversion\fR
Show kernel driver version. This flag will print out the AMDGPU module version for amdgpu\-pro or ROCK kernels\. For other kernels, it will simply print out the name of the kernel (uname).
.TP
\fB\-\-showfwinfo\fR [\fIBLOCK\fR ...]
Show FW information
.TP
\fB\-\-showmclkrange\fR
Show mclk range
.TP
\fB\-\-showmemvendor\fR
Show GPU memory vendor
.TP
\fB\-\-showsclkrange\fR
Show sclk range
.TP
\fB\-\-showproductname\fR
Show SKU/Vendor name. This uses the pci\.ids file to print out more information regarding the GPUs on the system\. 'update\-pciids' may need to be executed on the machine to get the latest PCI ID snapshot, as certain newer GPUs will not be present in the stock pci\.ids file, and the file may even be absent on certain OS installation types.
.TP
\fB\-\-showserial\fR
Show GPU's Serial Number. This flag will print out the serial number for the graphics card NOTE: This is currently only supported on Vega20 server cards that support it\. Consumer cards and cards older than Vega20 will not support this feature\.
.TP
\fB\-\-showuniqueid\fR
Show GPU's Unique ID
.TP
\fB\-\-showvoltagerange\fR
Show voltage range
.TP
\fB\-\-showbus\fR
Show PCI bus number
.SS "Pages information:"
.TP
\fB\-\-showpagesinfo\fR
Show retired, pending and unreservable pages
.TP
\fB\-\-showpendingpages\fR
Show pending retired pages
.TP
\fB\-\-showretiredpages\fR
Show retired pages
.TP
\fB\-\-showunreservablepages\fR
Show unreservable pages

The above four flags display the different "bad pages" as reported by the kernel\. The three types of pages are: Retired pages (reserved pages) \- These pages are reserved and are unable to be used Pending pages \- These pages are pending for reservation, and will be reserved/retired Unreservable pages \- These pages are not reservable for some reason.

.SS "Hardware-related information:"
.TP
\fB\-f\fR, \fB\-\-showfan\fR
Show current fan speed
.TP
\fB\-P\fR, \fB\-\-showpower\fR
Show current Average Graphics Package Power Consumption. "Graphics Package" refers to the GPU plus any HBM (High\-Bandwidth memory) modules, if present.
.TP
\fB\-t\fR, \fB\-\-showtemp\fR
Show current temperature
.TP
\fB\-u\fR, \fB\-\-showuse\fR
Show current GPU use
.TP
\fB\-\-showmemuse\fR
Show current GPU memory used.

This used to indicate how busy the respective blocks are\. For example, for \-\-showuse (gpu_busy_percent sysfs file), the SMU samples every ms or so to see if any GPU block (RLC, MEC, PFP, CP) is busy\. If so, that's 1 (or high)\. If not, that's 0 (low)\. If we have 5 high and 5 low samples, that means 50% utilization (50% GPU busy, or 50% GPU use)\. The windows and sampling vary from generation to generation, but that is how GPU and VRAM use is calculated in a generic sense\. \-\-showmeminfo (and VRAM% in concise output) will show the amount of VRAM used (visible, total, GTT), as well as the total available for those partitions\. The percentage shown there indicates the amount of used memory in terms of current allocations.

.TP
\fB\-\-showvoltage\fR
Show current GPU voltage.
.SS "Software-related/controlled information:"
.TP
\fB\-b\fR, \fB\-\-showbw\fR
Show estimated PCIe use

This shows an approximation of the number of bytes received and sent by the GPU over the last second through the PCIe bus\. Note that this will not work for APUs since data for the GPU portion of the APU goes through the memory fabric and does not 'enter/exit' the chip via the PCIe interface, thus no accesses are generated, and the performance counters can't count accesses that are not generated\. NOTE: It is not possible to easily grab the size of every packet that is transmitted in real time, so the kernel estimates the bandwidth by taking the maximum payload size (mps), which is the max size that a PCIe packet can be\. and multiplies it by the number of packets received and sent\. This means that the SMI will report the maximum estimated bandwidth, the actual usage could (and likely will be) less.

.TP
\fB\-c\fR, \fB\-\-showclocks\fR
Show current clock frequencies

.TS
allbox;
l l.
Clock type	Description
T{
.BR DCEFCLK
T}	DCE (Display)
T{
.BR FCLK 
T}	Data fabric (VG20 and later) \- Data flow from XGMI, Memory, PCIe
T{
.BR SCLK
T}	GFXCLK (Graphics core)
  Note	SOCCLK split from SCLK as of Vega10\. Pre\-Vega10 they were both controlled by SCLK
T{
.BR MCLK
T}	GPU Memory (VRAM)
T{
.BR PCLK
T}	PCIe bus
  Note	This gives 2 speeds, PCIe Gen1 x1 and the highest available based on the hardware
T{
.BR SOCCLK
T}	System clock (VG10 and later) \- DF, MM HUB, AT HUB, SYSTEM HUB, OSS, DFD
  Note	DF split from SOCCLK as of Vega20\. Pre\-Vega20 they were both controlled by SOCCLK
.TE

.TP
\fB\-g\fR, \fB\-\-showgpuclocks\fR
Show current GPU clock frequencies
.TP
\fB\-l\fR, \fB\-\-showprofile\fR
Show Compute Profile attributes
.TP
\fB\-M\fR, \fB\-\-showmaxpower\fR
Show maximum graphics package power this GPU will consume. This limit is enforced by the hardware\.
.TP
\fB\-m\fR, \fB\-\-showmemoverdrive\fR
Show current GPU Memory Clock OverDrive level
.TP
\fB\-o\fR, \fB\-\-showoverdrive\fR
Show current GPU Clock OverDrive level
.TP
\fB\-p\fR, \fB\-\-showperflevel\fR
Show current DPM Performance Level
.TP
\fB\-S\fR, \fB\-\-showclkvolt\fR
Show supported GPU and Memory Clocks and Voltages
.TP
\fB\-s\fR, \fB\-\-showclkfrq\fR
Show supported GPU and Memory Clock
.TP
\fB\-\-showmeminfo\fR \fITYPE\fR [\fITYPE\fR ...]
Show Memory usage information for given block(s) TYPE

This allows the user to see the amount of used and total memory for a given block (vram, vis_vram, gtt)\. It returns the number of bytes used and total number of bytes for each block 'all' can be passed as a field to return all blocks, otherwise a quoted\-string is used for multiple values (e\.g\. "vram vis_vram") vram refers to the Video RAM, or graphics memory, on the specified device vis_vram refers to Visible VRAM, which is the CPU\-accessible video memory on the device gtt refers to the Graphics Translation Table.

.TP
\fB\-\-showpids\fR
Show current running KFD PIDs
.TP
\fB\-\-showpidgpus\fR [\fISHOWPIDGPUS\fR ...]
Show GPUs used by specified KFD PIDs (all if no arg given)
.TP
\fB\-\-showreplaycount\fR
Show PCIe Replay Count
.TP
\fB\-\-showrasinfo\fR [\fISHOWRASINFO\fR ...]
Show RAS enablement information and error counts for the
specified block(s) (all if no arg given)

This shows the RAS information for a given block\. This includes enablement of the block (currently GFX, SDMA and UMC are the only supported blocks) and the number of errors ue \- Uncorrectable errors ce \- Correctable errors.
.TP
\fB\-\-showvc\fR
Show voltage curve
.TP
\fB\-\-showxgmierr\fR
Show XGMI error information since last read
.TP
\fB\-\-showtopo\fR
Show hardware topology information
.TP
\fB\-\-showtopoweight\fR
Shows the relative weight between GPUs
.TP
\fB\-\-showtopohops\fR
Shows the number of hops between GPUs
.TP
\fB\-\-showtopotype\fR
Shows the link type between GPUs
.TP
\fB\-\-showtoponuma\fR
Shows the numa nodes
.TP
\fB\-\-showenergycounter\fR
Energy accumulator that stores amount of energy consumed
.SS "Set options:"
.TP
\fB\-\-resetperfdeterminism\fR
Disable performance determinism
.TP
\fB\-\-setclock\fR \fILEVEL\fR \fILEVEL\fR
Set Clock Frequency Level(s) for specified clock (requires
manual Perf level)
.TP
\fB\-\-setsclk\fR \fILEVEL\fR [\fILEVEL\fR ...]
Set GPU Clock Frequency Level(s) (requires manual Perf level)
.TP
\fB\-\-setmclk\fR \fILEVEL\fR [\fILEVEL\fR ...]
Set GPU Memory Clock Frequency Level(s) (requires manual Perf
level)

The two above options allow you to set a mask for the levels\. For example, if a GPU has 8 clock levels, you can set a mask to use levels 0, 5, 6 and 7 with \-\-setsclk 0 5 6 7 \. This will only use the base level, and the top 3 clock levels\. This will allow you to keep the GPU at base level when there is no GPU load, and the top 3 levels when the GPU load increases\.

NOTES:
    The clock levels will change dynamically based on GPU load based on the default
    Compute and Graphics profiles\. The thresholds and delays for a custom mask cannot
    be controlled through the SMI tool.

    This flag automatically sets the Performance Level to "manual" as the mask is not
    applied when the Performance level is set to auto.

.TP
\fB\-\-setpcie\fR \fILEVEL\fR [\fILEVEL\fR ...]
Set PCIE Clock Frequency Level(s) (requires manual Perf level)
.TP
\fB\-\-setslevel\fR \fISCLKLEVEL\fR \fISCLK\fR \fISVOLT\fR
Change GPU Clock frequency (MHz) and Voltage (mV) for a specific
Level
.TP
\fB\-\-setmlevel\fR \fIMCLKLEVEL\fR \fIMCLK\fR \fIMVOLT\fR
Change GPU Memory clock frequency (MHz) and Voltage for (mV) a
specific Level
.TP
\fB\-\-setvc\fR \fIPOINT\fR \fISCLK\fR \fISVOLT\fR
Change SCLK Voltage Curve (MHz mV) for a specific point
.TP
\fB\-\-setsrange\fR \fISCLKMIN\fR \fISCLKMAX\fR
Set min and max SCLK speed
.TP
\fB\-\-setmrange\fR \fIMCLKMIN\fR \fIMCLKMAX\fR
Set min and max MCLK speed
.TP
\fB\-\-setfan\fR \fILEVEL\fR
Set GPU Fan Speed (Level or %)

This sets the fan speed to a value ranging from 0 to maxlevel, or from 0%\-100%
If the level ends with a %, the fan speed is calculated as pct*maxlevel/100
    (maxlevel is usually 255, but is determined by the ASIC).

NOTE: While the hardware is usually capable of overriding this value when required, it is
      recommended to not set the fan level lower than the default value for extended periods
      of time.

.TP
\fB\-\-setperflevel\fR \fILEVEL\fR
Set Performance Level

This lets you use the pre\-defined Performance Level values for clocks and power profile, which can include: auto (Automatically change values based on GPU workload) low (Keep values low, regardless of workload) high (Keep values high, regardless of workload) manual (Only use values defined by \-\-setsclk and \-\-setmclk).

.TP
\fB\-\-setoverdrive\fR %
Set GPU OverDrive level (requires manual|high Perf level)
.TP
\fB\-\-setmemoverdrive\fR %
Set GPU Memory Overclock OverDrive level (requires manual|high
Perf level)

The above two options are \fB\fIDEPRECATED IN NEWER KERNEL VERSIONS (use \-\-setslevel/\-\-setmlevel instead)\fR\fR This sets the percentage above maximum for the max Performance Level\. For example, \-\-setoverdrive 20 will increase the top sclk level by 20%, similarly \-\-setmemoverdrive 20 will increase the top mclk level by 20%\. Thus if the maximum clock level is 1000MHz, then \-\-setoverdrive 20 will increase the maximum clock to 1200MHz.

NOTES:
    This option can be used in conjunction with the \-\-setsclk/\-\-setmclk mask.

    Operating the GPU outside of specifications can cause \fBirreparable damage to your hardware\fR.
    Please observe the warning displayed when using this option.

    This flag automatically sets the clock to the highest level, as only the highest level is
    increased by the OverDrive value.

.TP
\fB\-\-setpoweroverdrive\fR \fIWATTS\fR
Set the maximum GPU power using Power OverDrive in Watts

This allows users to change the maximum power available to a GPU package\. The input value is in Watts\. This limit is enforced by the hardware, and some cards allow users to set it to a higher value than the default that ships with the GPU\. This Power OverDrive mode allows the GPU to run at higher frequencies for longer periods of time, though this may mean the GPU uses more power than it is allowed to use per power supply specifications\. Each GPU has a model\-specific maximum Power OverDrive that is will take; attempting to set a higher limit than that will cause this command to fail\.

NOTES:
    Operating the GPU outside of specifications can cause \fBirreparable damage to your hardware\fR.
    Please observe the warning displayed when using this option.

.TP
\fB\-\-setprofile\fR \fISETPROFILE\fR
Specify Power Profile level (#) or a quoted string of CUSTOM
Profile attributes "# # # #..." (requires manual Perf level)

The Compute Profile accepts 1 or n parameters, either the Profile to select (see \-\-showprofile for a list of preset Power Profiles) or a quoted string of values for the CUSTOM profile\. NOTE: These values can vary based on the ASIC, and may include:

\fBSCLK_PROFILE_ENABLE\fR \- Whether or not to apply the 3 following SCLK settings (0=disable,1=enable) NOTE: This is a hidden field\. If set to 0, the following 3 values are displayed as '\-’.
.TS
allbox;
l l.
Setting	Description
\fBSCLK_UP_HYST\fR	Delay before sclk is increased (in milliseconds)
\fBSCLK_DOWN_HYST\fR	Delay before sclk is decresed (in milliseconds)
\fBSCLK_ACTIVE_LEVEL\fR	Workload required before sclk levels change (in %)
.TE

\fBMCLK_PROFILE_ENABLE\fR \- Whether or not to apply the 3 following MCLK settings (0=disable,1=enable) NOTE: This is a hidden field\. If set to 0, the following 3 values are displayed as '\-'.
.TS
allbox;
l l.
Setting	Description
\fBMCLK_UP_HYST\fR	Delay before mclk is increased (in milliseconds)
\fBMCLK_DOWN_HYST\fR	Delay before mclk is decresed (in milliseconds)
\fBMCLK_ACTIVE_LEVEL\fR	Workload required before mclk levels change (in %)
.TE

Other settings:
.TS
allbox;
l l.
Setting	Description
\fBBUSY_SET_POINT\fR	Threshold for raw activity level before levels change
\fBFPS\fR	Frames Per Second
\fBUSE_RLC_BUSY\fR	When set to 1, DPM is switched up as long as RLC busy message is received
\fBMIN_ACTIVE_LEVEL\fR	Workload required before levels change (in %)
.TE

NOTES:
    When a compute queue is detected, the COMPUTE Power Profile values will be automatically
    applied to the system, provided that the Perf Level is set to "auto".

    The CUSTOM Power Profile is only applied when the Performance Level is set to "manual"
    so using this flag will automatically set the performance level to "manual".

    It is not possible to modify the non\-CUSTOM Profiles\. These are hard\-coded by the kernel.
.fi

.TP
\fB\-\-setperfdeterminism\fR \fISCLK\fR
Set clock frequency limit to get minimal performance variation
.TP
\fB\-\-rasenable\fR \fIBLOCK\fR \fIERRTYPE\fR
Enable RAS for specified block and error type
.TP
\fB\-\-rasdisable\fR \fIBLOCK\fR \fIERRTYPE\fR
Disable RAS for specified block and error type
.TP
\fB\-\-rasinject\fR \fIBLOCK\fR
Inject RAS poison for specified block (ONLY WORKS ON UNSECURE
BOARDS)
.SS "Reset options:"
.TP
\fB\-r\fR, \fB\-\-resetclocks\fR
Reset clocks and OverDrive to default
.TP
\fB\-\-resetfans\fR
Reset fans to automatic (driver) control
.TP
\fB\-\-resetprofile\fR
Reset Power Profile back to default
.TP
\fB\-\-resetpoweroverdrive\fR
Set the maximum GPU power back to the device default state
.TP
\fB\-\-resetxgmierr\fR
Reset XGMI error count
.SS "Auto-response options:"
.TP
\fB\-\-autorespond\fR \fIRESPONSE\fR
Response to automatically provide for all prompts (NOT
RECOMMENDED)
.SS "Output options:"
.TP
\fB\-\-loglevel\fR \fILEVEL\fR
This will allow the user to set a logging level for the SMI's actions, one
of debug/info/warning/error/critical\. Currently this is only implemented for sysfs writes, but can easily be expanded upon in the future to log other things from the SMI.
.TP
\fB\-\-json\fR
Print output in JSON format
.TP
\fB\-\-csv\fR
Print output in CSV format

.SH "OVERDRIVE SETTINGS"
Enabling OverDrive requires both a card that support OverDrive and a driver parameter that enables its use\. Because OverDrive features can damage your card, most workstation and server GPUs cannot use OverDrive\. Consumer GPUs that can use OverDrive must enable this feature by setting \fBbit 14\fR in the amdgpu driver's ppfeaturemask module parameter.
.P
For OverDrive functionality, the OverDrive bit (bit 14) must be enabled (by default, the OverDrive bit is disabled on the ROCK and upstream kernels)\. This can be done by setting amdgpu\.ppfeaturemask accordingly in the kernel parameters, or by changing the default value inside amdgpu_drv\.c (if building your own kernel)\.
.P
As an example, if the ppfeaturemask is set to 0xffffbfff (11111111111111111011111111111111), then enabling the OverDrive bit would make it 0xffffffff (11111111111111111111111111111111)\.
.P
These are the flags that require OverDrive functionality to be enabled for the flag to work: \-\-showclkvolt \-\-showvoltagerange \-\-showvc \-\-showsclkrange \-\-showmclkrange \-\-setslevel \-\-setmlevel \-\-setoverdrive \-\-setpoweroverdrive \-\-resetpoweroverdrive \-\-setvc \-\-setsrange \-\-setmrange

.SH "DISCLAIMER"
The information contained herein is for informational purposes only, and is subject to change without notice\. While every precaution has been taken in the preparation of this document, it may contain technical inaccuracies, omissions and typographical errors, and AMD is under no obligation to update or otherwise correct this information\. Advanced Micro Devices, Inc\. makes no representations or warranties with respect to the accuracy or completeness of the contents of this document, and assumes no liability of any kind, including the implied warranties of noninfringement, merchantability or fitness for particular purposes, with respect to the operation or use of AMD hardware, software or other products described herein\.

.SH COPYRIGHT
Copyright (c) 2014\-2022 Advanced Micro Devices, Inc\. All rights reserved\.

The present manpage has been aggregated from the help output of rocm-smi and the readme github page, by Maxime Chambonnet. This work is made available under the Expat license.
.SH VERSION
1.4.1

The SMI will report a "version" which is the version of the kernel installed: \fBuname\fR. For ROCk installations, this will be the AMDGPU module version (e\.g\. 5\.0\.71) For non\-ROCk or monolithic ROCk installations, this will be the kernel version, which will be equivalent to the following bash command: \fBuname \-a | cut \-d ' ' \-f 3\fR

.SH BUGS
Please report bugs to rocm.smi.lib@amd.com, and in last resort to debian-ai@lists.debian.org .

.SH AUTHORS

AMD Research and AMD HSA Software Development

Advanced Micro Devices, Inc.

www.amd.com

.SH SEE ALSO
The full local documentation for the C rocm-smi library is available with
the binary deb package \fBlibrocm-smi-dev\fR, and is installed at: /usr/share/doc/librocm-smi-dev/ROCm_SMI_Manual.pdf .

The documentation for
.B rocm-smi
is maintained as a README markdown file at https://github.com/RadeonOpenCompute/rocm_smi_lib/blob/master/python_smi_tools/README.md .
